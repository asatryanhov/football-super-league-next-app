import { NextRequest, NextResponse } from "next/server";
import { revalidateTag } from "next/cache";

export async function GET(request: NextRequest) {
  try {
    console.log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...");

    // –ü—Ä–æ–≤–µ—Ä–∏–º –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏—é –∫—ç—à–∞ –¥–ª—è –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
    const teamId = 2817; // Barcelona
    const tournamentId = 8;
    const seasonId = 77559;
    const tag = `team-${teamId}-${tournamentId}-${seasonId}`;

    console.log(`–ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∫—ç—à –¥–ª—è —Ç–µ–≥–∞: ${tag}`);
    revalidateTag(tag);

    // –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–∏–ª–∏—Å—å
    const response = {
      timestamp: new Date().toISOString(),
      status: "success",
      message: "–ö—ç—à –∏–Ω–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω –¥–ª—è Barcelona",
      tag: tag,
      nextSteps: [
        "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É",
        "–î–∞–Ω–Ω—ã–µ –¥–ª—è Barcelona –¥–æ–ª–∂–Ω—ã –æ–±–Ω–æ–≤–∏—Ç—å—Å—è",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞",
      ],
      storeFlow: {
        step1: "API invalidateTag() –∏–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∫—ç—à Next.js",
        step2: "–ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—Ä–æ—Å–µ ServerComponent –¥–µ–ª–∞–µ—Ç –Ω–æ–≤—ã–π API –∑–∞–ø—Ä–æ—Å",
        step3: "ClientComponent –ø–æ–ª—É—á–∞–µ—Ç –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ props",
        step4: "ClientComponent –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ Zustand Store",
        step5: "App.tsx –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ Store –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞",
      },
    };

    return NextResponse.json(response);
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:", error);
    return NextResponse.json(
      {
        error: "–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
        details: error instanceof Error ? error.message : "Unknown error",
      },
      { status: 500 }
    );
  }
}
